
d_what_rast.usage = d.what.rast \n\u0009\u0009--igrass-in map\n\u0009\u0009--coords "c1x,c1y,c2x,c2y" \n\u0009\u0009--oscalar-out *\u0009\u0009\n\u0009\u0009[ --printrowcols "true" ]\n\n\u0009\u0009

db_query.usage = Description: Reads the results of a query into an array of doubles. Thi sworks only with numeric and date data. \n\nUsage: db.query --query "select * from table" --otable-out "header1#..#headern#TYPE" --forcenumeric true\n\nParameters: \n--query the query to be executed\n--otable-out the header to use for the output, in this case a table. TYPE can be either the output file path or the keyword CONSOLE, in which case the output is sent to the console.\n--forcenumeric forces the output to be numeric, in which case things can be written to table, but for example not be charted

db_readts.usage = Description: Reads timeseries triggered by the supplied sql query from a database. If dburl is supplied, that database is used, else the default database instance is used. \n\nUsage: db.readts --tssql "select * from datatable" --mpsql "select * from stations" --start startdate --end enddate --dt timestep [--dburl databaseurl] [--embedded] [--memorymapped] [--bounds n,s,e,w] [--novalue number]\n\nParameters: \n--tssql the query to perform to retrieve the timeseries as stationid, date, value (start and end date are passed as parameters and therefore substituted with STARTDATE and ENDDATE, producing monitoringpoint identificator as MPID)\n--mpsql the query to perform to retrieve data regarding the points that produce the timeseries id. The format has to be stationid, x, y (bound informations are substituted in NORTH, SOUTH, EAST, WEST)\n--start start date in format "yyyy-mm-dd hh:mm"\n--end end date in format "yyyy-mm-dd hh:mm"\n--dt the timestep in minutes\n--dburl complete database url for custom database\n--embedded flag that forces to use an embedded database instead of the remote\n--memorymapped force the use of a memory mapped file for huge datasets (in case of outofmemory problems)\n--bounds n,s,w,e  if not present, the active region is assumed\n--novalue the novalue to use, if omitted -9999.0 is used. Has to be a number.\n

g_fork = Description: Forks data to be passed to several engines.\n\nUsage: g.fork --igrass-in mapname --ograss-out outmap1 --ograss-out outmap2\n\nParameters: \n--igrass-in the input map name, but this could be also a iscalar or any input\n--ograss-out the output map, to which the data are written, those could be also a tablewriter or a chartwriter, the 

g_fork.usage = Description: Forks data to be passed to several engines.\n\nUsage: g.fork --igrass-in mapname --ograss-out outmap1 --ograss-out outmap2\n\nParameters: \n--igrass-in the input map name, but this could be also a iscalar or any input\n--ograss-out the output map, to which the data are written, those could be also a tablewriter or a chartwriter, the important is that the type is consistent with the input items.

h_ab.usage = Inputs:\nthe map of planar curvatures (-plan);\nthe map with the total contributing areas (obtained with multitca or tca) (-tca);\nReturns:\nthe map of the areas per length unit (-ab);\nthe map of the contour line (-b)\n\nh.ab --igrass-plan plan --igrass-tca tca --ograss-ab ab --ograss-b b 0/1\n

h_aspect.usage = Inputs:\nthe depitted map (-pit)\nReturns:\nthe map with the aspect (-aspect)\n \nh.aspect --igrass-pit pit --ograss-aspect aspect\n

h_basinShape.usage = Inputs:\nthe map of elevations (-pit);\nthe map of basins (-basins);\nReturns:\nthe shapefile containing the basins (-basinshape);\n\nh.basinShape [--igrass-pit pit] --igrass-basins basins --oshapefile-basinshape "filePath"\n

h_cb.usage = h.cb\n\nInputs:\nthe file containing the data of the independent variable;\nthe file containing the data which will be used as dependent variable;\nthe first moment to calculate;\nthe last moment to calculate;\nthe insertion of an optional comment is also requested;\nReturns:\nfile containing: 1) the number of elements in each interval; \n2) the mean value of the data in abscissa; \n3) the mean value of the data in ordinate; \nn+2) the n-esimal moment of the data in ordinate.\n\nh.cb --igrass-map1 map1 --igrass-map2 map2 --otable-file1 nvalues#meanx#meany#mom_...#/file_path/#file1" --otable-file2 meanx#tbins#/file_path/#file2" --firstmoment value --lastmoment value --numbins value \n

h_curvatures.usage = Inputs:\nthe map of elevations (-pit);\nReturns:\nthe map of longitudinal curvatures (-prof);\nthe map of normal (or tangent) curvatures (-tang);\nthe file containing the matrix of planar curvatures (--plan);\n \nh.curvatures --igrass-pit pit --ograss-prof prof --ograss-plan plan --ograss-tang tang

h_d2o.usage   = Inputs:\nthe map of the drainage directions (-flow);\nReturns:\nthe map of the distances to outlet (-d2o);\nmode is for 0: topological distance (number of cells)\n            1: simple distance (meters)\n\nh.d2o --mode mode --igrass-flow flow --ograss-d2o d2o\n

h_d2o3d.usage = Inputs:\nthe map containing the elevations (-pit);\nthe map containing the drainage directions (-flow);\nReturns:\nthe map of distances (-d2o3d)\n\nh.d2o3d --igrass-pit pit --igrass-flow flow --ograss-d2o3d d2o3d\n

h_dd.usage = Inputs: \nthe map containing the drainage directions (-flow); \nthe map containing the total contributing areas calculated with this drainage directions (-tca); \nthe map containing the network (-net); \n Output: \nthe map containing the drainage dinsity (-dd); \n  jgrass h.dd --igrass-flow flow --igrass-tca tca --igrass-net net --ograss-dd dd

h_diameters.usage = Inputs:\nthe map of the drainage directions (-flow);\nReturns:\nthe map of the diameters (-diameters);\nit is necessary to choose if in the calculus only the source points, or all points (as possible points belonging to the sub-basins boundaries) have to be considered. \nThis if effected by typing, when requested, 0 or 1.\n\nh.diameters --mode mode (0/1) --igrass-flow flow --ograss-diameters diameters\n

h_disteuclidea.usage = Inputs:\nthe map of the drainage directions (-flow);\nReturns:\nthe file containing the matrix of the dist_euclidea (-dist);\n\nh.disteuclidea --igrass-flow flow --ograss-dist dist\n

h_draindir.usage = Inputs:\nthe depitted map (-pit)\nthe old drainage direction map (-flow)\nthe lambda parameter (a value in the range 0 - 1) (-lambda)\nthe method choosen: LAD (angular deviation) and LTD (trasversal distance)(-mode)\nReturns:\nthe map with the new drainage directions (-dir)\nthe map with the total contributing areas calculated with this drainage directions (-tca)\n\nmethod LAD: h.draindir --mode 1 --igrass-pit pit --igrass-flow flow --lambda lambda --ograss-dir dir --ograss-tca tca\nmethod LTD: h.draindir --mode 2 --igrass-pit pit --igrass-flow flow --lambda lambda --ograss-dir dir --ograss-tca tca\nmethod FLOW FIXED: h.draindir --mode 1-2 --flowfixed 1 --igrass-pit pit --igrass-flow flow --igrass-flowfixed flowfixed --lambda lambda --ograss-dir dir

h_extractnetwork.usage = mode 0: h.extractnetwork --mode 0 --igrass-flow flow --igrass-tca tca --threshold threshold --ograss-net net\nmode 1: h.extractnetwork --mode 1 --igrass-flow flow --igrass-tca tca --igrass-slope slope --threshold threshold --ograss-net net\nmode 2: h.extractnetwork --mode 2 --igrass-flow flow --igrass-tca tca --igrass-classi classi --threshold threshold --ograss-net net\n\nIt's also possible to create a ShapeFile containing the network:\nmode 0: h.extractnetwork --mode 0 --igrass-flow flow --igrass-tca tca --threshold threshold --ograss-net net --oshapefile-netshape "filePath"\nmode 1: h.extractnetwork --mode 1 --igrass-flow flow --igrass-tca tca --igrass-slope slope --threshold threshold --ograss-net net --oshapefile-netshape "filePath"\nmode 2: h.extractnetwork --mode 2 --igrass-flow flow --igrass-tca tca --igrass-classi classi --threshold threshold --ograss-net net --oshapefile-netshape "filePath"\n\n

h_flow.usage = h.flow --igrass-pit pit --ograss-flow flow\n\nAuthors: David Tarboton - http://www.neng.usu.edu/cee/faculty/dtarb/tardem.html#programs\n

h_gc.usage = Inputs:\nthe matrix of the slopes (-slope);\nthe matrix of the channel network (-net);\nthe matrix containing the subdivisions 9 classes (-cp9);\nReturns:\nthe matrix containing the subdivision in the 11 predefined classes (-class);\nthe matrix of the aggregated classes (hillslope, valleys and net) (-aggclass);\n\nmode 0: h.gc --igrass-slope slope --igrass-net net --igrass-cp9 cp9 --ograss-class class --ograss-aggclass aggclass --thgrad value

h_gradient.usage = Inputs:\nthe matrix of elevations (-pit);\nReturns:\nmatrix of the gradients (-gradient);\n\nh.gradient --igrass-pit pit --ograss-gradient gradient

h_h2ca.usage = Inputs:\nthe map of the drainage directions (-flow);\nthe map containing the net (-net);\nthe map containing the attribute to estimate (-attribute);\nReturns:\nthe map of the Hillslope2ChannelAttribute (-h2ca);\n\nh.h2ca --igrass-flow flow --igrass-net net --igrass-attribute attribute --ograss-h2ca h2ca

h_h2cd.usage   = Inputs:\nthe map of the drainage directions (-flow);\nthe map containing the network (-net);\nthe method (-mode);\nReturns:\nthe map containing the distance of every point from the river network (-h2cd);\n\nh.h2cd --igrass-net net --igrass-flow flow --ograss-h2cd h2cD --mode 0/1\n

h_h2cd3d.usage = Inputs:\nthe map containing the drainage directions (-flow);\nthe map containing the channel network (-net);\nthe map containing the elevations (-pit);\nReturns:\nthe file containing the distance of every point from the river network (-h2cd3d)\n\nh.h2cd3d --igrass-flow flow --igrass-pit pit --igrass-net net --ograss-h2cd3d h2cd3d

h_hacklength.usage   = Inputs:\nthe map containing the drainage directions (-flow);\nthe map containing the contributing areas (-tca);\nReturns:\nthe map of the Hack distances (-hackl)\n\nh.hacklength --igrass-flow flow --igrass-tca tca --ograss-hackl hackl\n

h_hacklength3d.usage = Inputs:\nthe file containing the elevations of the DEM (-pit);\nthe map containing the drainage directions (-flow);\nthe map containing the contributing areas (-tca);\nReturns:\nthe map of the Hack distances (-hackl3d)\n\nh.hacklength3d --igrass-pit pit --igrass-flow flow --igrass-tca tca --ograss-hackl3d hackl3d\n

h_hackstream.usage = Inputs:\nthe map containing the drainage directions (-flow)\nthe map containing the contributing areas (-tca)\nthe map containing the network (-net)\nthe map containing the Hack lengths (-hack)\nReturns:\nthe map of the order according the Hack lengths (-hacks)\n\nmode 0: h.hackstream --mode 0 --igrass-flow flow --igrass-tca tca --igrass-hackl hackl --igrass-net net --ograss-hacks hacks\nmode 1: h.hackstream --mode 1 --igrass-flow flow --igrass-num num --ograss-hacks hacks\n

h_kriging.usage = Description: Interpolate data with Kriging\n\nUsage: h.kriging --iscalar-timeseries inputdata [--dogrid "true"] [--ograss-outputmap pattern] [--ishapefile-positions basins]\n\nParameters: 

h_magnitudo.usage = Inputs:\nthe map of the drainage directions (-flow);\nReturns:\nthe map of the basin magnitude (-magnitudo);\n\nh.magnitudo --igrass-flow flow --ograss-magnitudo magnitudo\n

h_markoutlets.usage = Inputs:\nthe map of the drainage directions to modify (-flow)\nReturns:\nthe map of the data assigned in input with the outlets set equal to 10 (-mflow)\n\nh.markoutlets --igrass-flow flow --ograss-mflow mflow

h_meandrop.usage = Inputs:\nthe map of the drainage directions(-flow);\nthe map with the total contributing area;\nthe map with the quantity of which estimating the mean value;\nOutput:\nthe map with the mean value of the quantity for each point of the basin; \n jgrass h.meandrop --igrass-flow flow --igrass-tca tca --igrass-summ summ --ograss-meandrop meandrop

h_multitca.usage = Inputs:\nthe map of elevations (-pit);\nthe map of the drainage directions (-flow);\nthe map of the aggregated topographic classes (-cp3);\nReturns:\nthe map of the multitca (-multitca);\n\nh.multitca --igrass-flow flow --igrass-pit pit --igrass-casi3 casi3 --ograss-multitca multitca\n

h_nabla.usage = Inputs:\nthe map of elevations (-pit);\nthe choice between the calculation of the real value or of the classes\nif we choose the second option, we must specify the threshold to define planarity\nReturns:\nfile containing the matrix of the Laplace operator, or the topographic classes (-nabla);\n\nmode 0: h.nabla --mode 0 --igrass-pit pit --ograss-nabla nabla --threshold threshold\nmode 1: h.nabla --mode 1 --igrass-pit pit --ograss-nabla nabla\n

h_netdif.usage = Inputs:\nthe map containing the drainage directions (-flow);\nthe file containing thand date on which estimating the difference (in the example above the matrix of the Strahler numeration) (-stream);\nthe file containing the quantity of which calculating the difference (in the example above\nthe matrix containing the elevations) (-mapdiff);\nReturns:\nthe file containing the differences (-diff)\n\nh.netdif --igrass-flow flow --igrass-stream stream --igrass-mapdiff mapdiff --ograss-diff diff

h_netnumbering.usage = Inputs:\nthe map containing the drainage directions (-flow);\nthe map containing the channel network (-net);\nReturns:\nthe map containing the net with the streams numerated (-netnumber);\nthe map containing the sub-basins (-basin)\n\nmode 0: h.netnumbering --mode 0 --igrass-flow flow --igrass-net net --ograss-netnumber netnumber --ograss-basin basin\nmode 1: h.netnumbering --mode 1 --thtca value --igrass-flow flow --igrass-net net --igrass-tca tca --ograss-netnumber netnumber--ograss-basin basin\nmode 2: h.netnumbering --mode 2 --igrass-flow flow --igrass-net net --ishapefile-pointshape "filepath" --ograss-netnumber netnumber--ograss-basin basin\nmode 3: h.netnumbering --mode 3 --thtca value --igrass-flow flow --igrass-net net --igrass-tca tca --ishapefile-pointshape "filepath" --ograss-netnumber netnumber--ograss-basin basin\n\nh.netnumbering --igrass-flow flow --igrass-net net --ograss-netnumber netnumberx --ograss-basin basinx --ocolor-colornumbers netnumber --ocolor-colorbasins basin\n\n

h_netshape2flow.usage = \nDescription:\nIt reads a shape file containing the network of the basin and calculate two map, one with the flow direction and one with the channel numbered as the feature id in the shapefile. A field can defined to filter out features during processing.\n\nUsage: \nh.netshape2flow --ishapefile-netshape "quotedstring" --ograss-flownet string --ograss-channelnet string [--activefield string] [--createproblemshp boolean] [--idfield string]\n\nParameters:\nishapefile-netshape the shapefile containing the channel network\nograss-flownet - the map containing the flow directions    \nograss-channelnet - the map containing the net with the streams numerated\nactivefield - the field of the shapefile that defines whether to process a feature or not\ncreateproblemshp - flag that defines weather to create a temporary resource with the problem points or not\nidfield - the field of the shapefile that should be used as the id to create the channelnet map\n\n\n

h_peakflow.usage = Usage for statistic rain\r\rh.peakflow \r\u0009--iscalar-sup widthfunction \r\u0009--iscalar-sub widthfunction\r\u0009--a double\r\u0009--n double\r\u0009--channelcelerity double\r\u0009--diffusion double\r\u0009--outputtimestep double\r\u0009--oscalar-discharge file\r\u0009

h_pfafstetter.usage = h.pfafstetter --mode 1 --igrass-flow flow --igrass-hacks hacks --igrass-pit pit --igrass-netnumber netnumber --igrass-channel channel --ishapefile-netshape filePath --oshapefile-netshapeout filePath"\nh.pfafstetter --mode 0 --igrass-flow flow --igrass-hacks hacks --igrass-pit pit --igrass-netnumber netnumber --oshapefile-netshapeout filePath\n

h_pitfiller.usage = \nDescription:\nIt fills the depression points present within a DEM so that the drainage directions are defined in each point.  \n\nUsage:h.pitfiller --igrass-elevation elevation --ograss-pit pit \n  \n\nParameters:\n--igrass-elevation the map containing the elevations\n--ograss-pit the map of the correct elevations\n\nAuthors: David Tarboton - http://www.neng.usu.edu/cee/faculty/dtarb/tardem.html#programs\n\n

h_rescaleddistance.usage   = Inputs:\nthe map of the drainage directions (-flow);\nthe file containing the net (-net);\nthe channel-overland ratio (-number);\nReturns:\nthe map of the rescaled distances (-rdist);\n\nh.rescaleddistance --igrass-net net --igrass-flow flow --ograss-rdist rdist --number number

h_rescaleddistance3d.usage = Inputs:\nthe file containing the elevations of the DEM (-pit);\nthe map of the drainage directions (-flow);\nthe file containing the net (-net);\nthe channel-overland ratio (-number);\nReturns:\nthe map of the rescaled distances (-rdist3d);\n\nh.rescaleddistance3d --igrass-pit pit --igrass-net net --igrass-flow flow --ograss-rdist3d rdist3d --number number

h_seol.usage = \nInputs:\nthe file of the drainage directions (obtained with markoutlets);\nthe file containing the quantity to examine (e.g. the contributing areas);\nthe file containing the channel network (obtained with extractnetwork);\nthe output mode: compressed (1) or normal (0). In the first case we create a file containing the coordinates of the points selected and the value of the quantity; in the second case we reproduce the file with the DEM and the values of the quantity analized, substituted by NOVALUE in the non-selected points.\nOutput:\nthe file containing the values of the quantity analized in the points selected, according to the modes already described.\n\njgrass h.seol --mode 0/1 --igrass-flow flow --igrass-quantity quantity_map --igrass-net net --ograss-seol seol --oshapefile-seol "path for output seol shapefile"

h_shalstab.usage = h.shalstab --igrass-slopemap slope --igrass-abmap ab --igrass-trasmissivitymap trasmissivity --igrass-cohesionmap cohesion --igrass-hsmap hs --igrass-tgphimap tgphi --igrass-rhomap rho --igrass-qmap q --ograss-qcritmap qcrit --ograss-classimap classi\n\nh.shalstab --igrass-slopemap slope --igrass-abmap ab --trasmissivityconst trasmissivity --cohesionconst cohesion--hsconst hs --tgphiconst tgphi --rhoconst rho --qconst q --ograss-qcritmap qcrit --ograss-classimap classi --ocats-catsqcrit qcrit map name --ocats-catsclass class map name\n\nwith categories: h.shalstab --igrass-slopemap slope --igrass-abmap ab --igrass-trasmissivitymap trasmissivity --igrass-cohesionmap cohesion --igrass-hsmap hs --igrass-tgphimap tgphi --igrass-rhomap rho --igrass-qmap q --ograss-qcritmap qcrit --ograss-classimap classi --ocats-catsqcrit qcrit map name --ocats-catsclass class map name\n\nwith categories: h.shalstab --igrass-slopemap slope --igrass-abmap ab --trasmissivityconst trasmissivity --cohesionconst cohesion--hsconst hs --tgphiconst tgphi --rhoconst rho --qconst q --ograss-qcritmap qcrit --ograss-classimap classi\n

h_slope.usage = Inputs:\nthe map of elevations (-pit);\nthe map of the drainage directions (-flow);\nReturns:\nthe map of the slopes (-slope);\n\nh.slope --igrass-pit pit --igrass-flow flow --ograss-slope slope\n

h_splitsubbasin.usage = Inputs:\nthe matrix of the drainage directions (-flow);\nthe matrix of the order according the Hack lengths (-hacks);\nthe matrix containing the contributing areas (-tca);\nReturns:\nthe file containing the net with the streams numerated\nthe file containing the subbasin of 2 order\n\nh.splitsubbasin --hackorder hackorder --threshold value --igrass-flow flow --igrass-hacks hacks --igrass-tca tca --ograss-netnumber netnumber --ograss-subbasin subbasin\n

h_strahler.usage = Inputs:\nthe map of the drainage directions (-flow);\nthe map of the network (-net);\nReturns:\nthe map of the net with the branches numerated according to Strahler (-strahler);\n\nmode 0: h.strahler --mode 0 --igrass-flow flow --ograss-strahler strahler\nmode 1: h.strahler --mode 1 --igrass-flow flow --igrass-net net --ograss-strahler strahler\n

h_sumdownstream.usage = Inputs:\nthe map containing the drainage directions (-flow);\nthe map containing the quantity to sum (-maptosum);\nReturns:\nthe map containing the summed quantities (-summ);\n\nh.sumdownstream --igrass-maptosum maptosum --igrass-flow flow --ograss-summ summ\n

h_tau.usage = Inputs:\nthe map of slope (-slope);\nthe map of the ab (-ab);\nReturns:\nthe map of the tau (-tau);\n\nh.tau --igrass-slope slope --igrass-ab ab --ograss-tau tau --rho rho --g g --ni ni --q q --k k --c c --t t

h_tc.usage    = Inputs:\nthe map of the longitudinal curvatures (-prof);\nthe map of the normal curvatures (-tang);\nthe threshold value for the longitudinal curvatures (-thprof);\nthe threshold value for the normal curvatures (-thtang);\nReturns:\nthe map of the 9 curvatures classes (-cp9);\nthe map of the concave, convex and planar sites (-cp3);\n\nh.tc --igrass-prof prof --igrass-tang tang --ograss-cp3 cp3 --ograss-cp9 cp9 --thprof value --thtang value

h_tca.usage   = Inputs:\nthe map of elevations (-pit);\nReturns:\nthe map of total contributing area (-tca);\n\nh.tca --igrass-flow flow --ograss-tca tca\n

h_tca3d.usage = Inputs:\nthe map containing the elevations (-pit);\nthe map containing the drainage directions (-flow);\nReturns:\nthe map of tca3d (-tca3d)\n\nh.tca3d --igrass-pit pit --igrass-flow flow --ograss-tca3d tca3d\n

h_topindex.usage = Inputs:\nthe map of total contributing area(-tca);\nthe map of slope (-slope);\nOutput:\nthe map of topindex(-topindex)\n\n jgrass h.topindex --igrass-tca tcamap --igrass-slope gradient --ograss-topindex topindex\n

h_trasmissivity.usage = Inputs:\nthe map of slope (-slopemap);\nthe map of condicibility (-conducibilitymap);\nthe map of (-hsmap);\nReturns:\nthe map of trasmissivity (-trasmissivitymap);\nh.trasmissivity --igrass-slopemap slope --igrass-hsmap hs --hsconst value --igrass-conducibilitymap conducibility --conducibilityconst value --ograss-trasmissivitymap trasmissivity

h_wateroutlet.usage = Inputs:\nthe map of the drainage directions (-flow)\nthe coordinates of the water outlet (-north, -east)\nReturns:\nthe basin extracted mask (-basin)\na choosen map cutten on the basin mask (the name assigned is input.mask) (-trim)\n\nh.wateroutlet --igrass-map map --igrass-flow flow --ograss-basin basin --ograss-trim trim --north north --east east

i_imagemosaic.usage = i.imagemosaic --imagefolder "/home/moovida/imagefolder" --ext tiff --name catalog [ --abs true ]\n

i_overview.usage = i.overview --folder "/home/moovida/imagefolder/" --ext tiff --tilesize "512,512" [ -f 32 ] [ -n 8 ] [ -a nn ] [ -c 512 ]\r\r\rNOTE THAT THIS COMMAND CAN BE VERY MEMORY AND CPU INTENSIVE!!

i_tiler.usage = This utility splits rasters into smaller pieces. One can control both the dimension of the tile that will be generated as well as the dimension of the internal tiles for the, improvements. This would allows us not only to break a big coverage into smaller tiles, but also to do the opposite. One may want to compose a mosaic and retile it into bigger tiles, well this can be easily done with this utility.\n\ri.tiler --tilesize "8192,8192" --internaltilesize "512,512" --image "foldertoimage/myImage.tiff"\r\nThe tiles will be stored on the folder "foldertoimage", which will be automatically created.

r_read.usage = Description: Reads raster data from layer or file\n\nUsage: r.read --igrass-in mapname1  --ograss-out mapname2\n\nParameters: \n--igrass-in the raster map to read (also irlayer is accepted)\n--ograss-out the raster to write

r_summary.usage = jgrass r.summary --igrass-in map --oscalar-out *

r_to_vect.usage = r.to.vect --igrass-in map --oshapefile-out shapepath --mode POINT

rv_rc2shpattr.usage = Description: Adds a column containing the category of the raster map to the shapefile's attribute table.\n\nUsage: rv.rc2shpattr --igrass-raster categories_raster --ishapefile-inshp "input/hsapefile" --oshapefile-outshp "output/shapefile" [--fieldname newfieldname] [--coordposition start/end/middle] 

v_read.usage = Description: Reads feature data from layer or file\n\nUsage: v.read --ishapefile-in url  --oshapefile-out url\n\nParameters: \n--ishapefile-in the shapefile to read (also iflayer is accepted, in which case selection is taken into account)\n--oshapefile-out the shapefile to write

v_to_rast.usage = \ v.to.rast\n\u0009--ishapefile-in "shapefilepath"\n\u0009--ograss-out outmapname\n\u0009[ --fieldname "string" ] [ --value number ]\n\n
